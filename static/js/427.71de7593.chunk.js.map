{"version":3,"file":"static/js/427.71de7593.chunk.js","mappings":"qMAEA,MAAMA,EAAeC,IACjBC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,GAAE,YAAAC,OAAcL,EAAMM,WAAWC,IAAKL,SAC1CF,EAAMM,WAAWE,aCJ9B,EAAmC,kCAAnC,EAAgF,0BAAhF,EAAiH,sBAAjH,EAA2J,mCCA3J,GAAgB,iBAAmB,kCAAkC,SAAW,0BAA0B,WAAa,6B,cCGvH,MAAMC,EAAWT,IACbU,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,iBAAiBX,SAAA,EAC3CQ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcE,SAASZ,SAAA,EACnCD,EAAAA,EAAAA,KAAA,OAAKc,IAAKC,EAAYC,IAAI,WAC1BhB,EAAAA,EAAAA,KAAA,OAAKU,UAAWC,EAAcM,WAAWhB,SACnCF,EAAMmB,YAAYD,iBAI5BjB,EAAAA,EAAAA,KAAA,OAAKU,UAAWC,EAAcQ,eAAelB,SACvCF,EAAMmB,YAAYE,a,mECPhC,MAMMC,EAAqB,CACvBC,YAAaC,EAAAA,GASjB,GANyBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAXqBC,IAAK,CAC1BC,YAAaD,EAAME,YAAYD,YAC/BE,aAAcH,EAAME,YAAYC,aAChCC,uBAAwBJ,EAAME,YAAYE,0BAQjBT,GACzBU,EAAAA,EACAC,EAAAA,EAHqBR,ECTRzB,IACb,MAAMkC,EAAmBlC,EAAM4B,YAAYO,KAAIC,IAC3CnC,EAAAA,EAAAA,KAACF,EAAW,CAAqBO,WAAY8B,GAA3BA,EAAW7B,MAG3B8B,EAAmBrC,EAAM8B,aAAaK,KAAKhB,IAC7ClB,EAAAA,EAAAA,KAACQ,EAAO,CAAsBU,YAAaA,GAA7BA,EAAYZ,MAGxB+B,GAA0BC,EAAAA,EAAAA,GAAU,CACtCC,KAAM,kBADsBD,EAE7BvC,IACCU,EAAAA,EAAAA,MAAA,QAAM+B,SAAUzC,EAAM0C,aAAaxC,SAAA,EAC/BD,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CACFC,UAAWC,EAAAA,EACXC,KAAK,iBACLC,KAAK,KACLC,KAAK,KACLC,YAAY,6HACZC,SAAU,CAACC,EAAAA,MAEflD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,uHAQhB,OACIQ,EAAAA,EAAAA,MAAA,OAAKC,UAAWyC,EAA+BlD,SAAA,EAC3CD,EAAAA,EAAAA,KAAA,OAAKU,UAAWyC,EAAuBlD,SAClCgC,KAGLxB,EAAAA,EAAAA,MAAA,OAAKC,UAAWyC,EAAmBlD,SAAA,CAC9BmC,GAEDpC,EAAAA,EAAAA,KAAA,OAAKU,UAAWyC,EAAgClD,UAC5CD,EAAAA,EAAAA,KAACqC,EAAuB,CAACG,SAdbY,IACxBrD,EAAMuB,YAAY8B,EAAoBC,eAAe,WAgB/C,G,kEC/Cd,MAAMtB,EAAiBuB,IAcI7B,EAAAA,EAAAA,KALEC,IAAK,CAC1B6B,KAAM7B,EAAM6B,QAEW,CAAC,EAEL9B,EAbN1B,GACRA,EAAMwD,KAAKC,QAITxD,EAAAA,EAAAA,KAACsD,EAAS,IAAKvD,KAHXC,EAAAA,EAAAA,KAACyD,EAAAA,GAAQ,CAAEtD,GAAG,Y,kECHjC,MAAM6B,EAAgBsB,GACDvD,IACbC,EAAAA,EAAAA,KAAC0D,EAAAA,SAAQ,CAACC,UAAU3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,IAAI3D,UAC3BD,EAAAA,EAAAA,KAACsD,EAAS,IAAKvD,K","sources":["components/Dialogs/DialogTitle/DialogTitle.jsx","webpack://pet-project/./src/components/Dialogs/Dialogs.module.scss?d037","webpack://pet-project/./src/components/Dialogs/Message/Message.module.scss?a735","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx","components/hoc/WithAuthCheck.jsx","components/hoc/WithSuspense.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst DialogTitle = (props) =>(\n    <div>\n        <NavLink to={`/dialogs/${props.dialogInfo.id}`}>\n            {props.dialogInfo.userName}\n        </NavLink>\n    </div>\n);\n\nexport { DialogTitle };","// extracted by mini-css-extract-plugin\nexport default {\"dialogsContainer\":\"Dialogs_dialogsContainer__UX2ps\",\"chatList\":\"Dialogs_chatList__0Su6V\",\"chat\":\"Dialogs_chat__3zKHX\",\"newMessageControl\":\"Dialogs_newMessageControl__1Ok5t\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageContainer\":\"Message_messageContainer__ry3ap\",\"userInfo\":\"Message_userInfo__xXTZk\",\"authorName\":\"Message_authorName__LTzR8\"};","import React from 'react';\nimport MessageStyles from './Message.module.scss';\nimport AnimeImage from '../../../images/anime.jpg';\n\nconst Message = (props) => (\n    <div className={MessageStyles.messageContainer}>\n        <div className={MessageStyles.userInfo}>\n            <img src={AnimeImage} alt=\"anime\" />\n            <div className={MessageStyles.authorName}>\n                { props.messageData.authorName }\n            </div>\n        </div>\n        \n        <div className={MessageStyles.messageContent}>\n            { props.messageData.message }\n        </div>\n    </div>\n)\n\nexport { Message };","import { compose } from 'redux';\nimport { sendMessageAction } from '../../redux/reducers/dialogsReducer';\nimport { withAuthCheck } from '../hoc/WithAuthCheck';\nimport { Dialogs } from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withSuspense } from '../hoc/WithSuspense';\n\nconst mapStateToProps = (state) => ({\n    dialogsData: state.dialogsPage.dialogsData,\n    messagesData: state.dialogsPage.messagesData,\n    newMessageControlValue: state.dialogsPage.newMessageControlValue\n});\n\nconst mapDispatchToProps = {\n    sendMessage: sendMessageAction,\n};\n\nconst DialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthCheck,\n    withSuspense,\n)(Dialogs);\n\nexport default DialogsContainer;","import React from 'react';\nimport { DialogTitle } from './DialogTitle/DialogTitle';\nimport DialogsStyles from './Dialogs.module.scss';\nimport { Message } from './Message/Message';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/Input/Input';\nimport { requiredValidator } from '../../utils/validators/validators';\n\nconst Dialogs = (props) => {\n    const chatListTemplate = props.dialogsData.map(dialogData => (\n        <DialogTitle key={dialogData.id} dialogInfo={dialogData}/>\n    ));\n\n    const messagesTempalte = props.messagesData.map((messageData) => (\n        <Message key={messageData.id} messageData={messageData}/>\n    ))\n\n    const NewMessageFormComponent = reduxForm({\n        form: 'newMessageForm'\n    })(props => (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                component={Textarea}\n                name=\"newMessageText\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"Текст нового сообщения\"\n                validate={[requiredValidator]}\n            />\n            <button>Отправить сообщение</button>\n        </form>\n    ))\n\n    const onSendMessageClick = (newMessageFormValue) => {\n        props.sendMessage(newMessageFormValue.newMessageText)\n    } \n\n    return (\n        <div className={DialogsStyles.dialogsContainer}>\n            <div className={DialogsStyles.chatList}>\n                {chatListTemplate}\n            </div>\n\n            <div className={DialogsStyles.chat}>\n                {messagesTempalte}\n\n                <div className={DialogsStyles.newMessageControl}>\n                    <NewMessageFormComponent onSubmit={onSendMessageClick}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport { Dialogs };","import { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst withAuthCheck = (Component) => {\n    const wrapper = (props) => {\n        if (!props.auth.isAuth) {\n            return <Navigate  to=\"/login\"/>;\n        }\n\n        return <Component {...props}/>\n    }\n\n    const mapStateToProps = (state) => ({\n        auth: state.auth\n    });\n    const mapDispatchToProps = {}\n    \n    const checkComponent = connect(mapStateToProps, mapDispatchToProps)(wrapper)\n\n    return checkComponent;\n}\n\nexport { withAuthCheck }\n","import React, { Suspense } from \"react\"\nimport { Loader } from \"../common/Loader/Loader\"\n\nconst withSuspense = (Component) => {\n    const wrapper = (props) => (\n        <Suspense fallback={<Loader />}>\n            <Component {...props} />\n        </Suspense>\n    )\n    \n    return wrapper;\n}\n\nexport { withSuspense }\n"],"names":["DialogTitle","props","_jsx","children","NavLink","to","concat","dialogInfo","id","userName","Message","_jsxs","className","MessageStyles","messageContainer","userInfo","src","AnimeImage","alt","authorName","messageData","messageContent","message","mapDispatchToProps","sendMessage","sendMessageAction","compose","connect","state","dialogsData","dialogsPage","messagesData","newMessageControlValue","withAuthCheck","withSuspense","chatListTemplate","map","dialogData","messagesTempalte","NewMessageFormComponent","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","cols","rows","placeholder","validate","requiredValidator","DialogsStyles","newMessageFormValue","newMessageText","Component","auth","isAuth","Navigate","Suspense","fallback","Loader"],"sourceRoot":""}