{"version":3,"file":"static/js/159.ff73eb0c.chunk.js","mappings":"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","sources":["webpack://pet-project/./src/components/Profile/Posts/Post/Post.module.scss?3df6","components/Profile/Posts/Post/Post.jsx","webpack://pet-project/./src/components/Profile/Posts/Posts.module.scss?d335","components/Profile/Posts/Posts.jsx","webpack://pet-project/./src/components/Profile/UserInfo/UserInfo.module.scss?42ca","webpack://pet-project/./src/components/Profile/UserInfo/UserStatus/UserStatus.module.scss?fa90","components/Profile/UserInfo/UserStatus/UserStatus.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/WithAuthCheck.jsx","components/hoc/WithSuspense.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__9KJzS\",\"authorInfo\":\"Post_authorInfo__-nZjb\",\"message\":\"Post_message__L+Sk1\"};","import PostStyles from './Post.module.scss';\nimport AnimeImage from '../../../../images/anime.jpg';\nimport React from 'react';\n\nconst Post = (props) => (\n    <div className={PostStyles.post}>\n        <div className={PostStyles.authorInfo}>\n            <img src={AnimeImage} alt=\"anime\" />\n            <div>{ props.authorName }</div>\n        </div>\n        <div className={PostStyles.message}>{ props.message }</div>\n    </div>\n    \n)\n\nexport { Post }","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__pdW+M\",\"newPost\":\"Posts_newPost__hzkzv\"};","import React from 'react';\nimport { Post } from './Post/Post';\nimport PostsStyles from './Posts.module.scss';\nimport { Field, reduxForm } from 'redux-form';\n\nconst Posts = (props) => {\n    const Posts = props.postsData.map(postData => (\n        <Post key={postData.id} message={postData.message} id={postData.id} authorName={postData.authorName} />\n    ))\n\n    const NewPostFormComponent = reduxForm({\n        form: 'newPostForm'\n    })((props) => (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                name=\"newPostText\"\n                component=\"textarea\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"Текст нового поста\"\n            />\n            <button>Запостить</button>\n        </form>\n    ))\n\n    const createNewPost = (newPostFormValue) => {\n        props.createPost(newPostFormValue.newPostText)\n    }\n\n    return (\n        <div className={PostsStyles.posts}>\n            <div>Посты</div>\n\n            <div className={PostsStyles.newPost}>\n                <NewPostFormComponent onSubmit={createNewPost}/>\n            </div>\n\n            {Posts}\n        </div>\n    )\n}\n\nexport { Posts };","// extracted by mini-css-extract-plugin\nexport default {\"userInfoContainer\":\"UserInfo_userInfoContainer__H9afX\",\"userInfo\":\"UserInfo_userInfo__ZH3js\"};","// extracted by mini-css-extract-plugin\nexport default {\"userStatus\":\"UserStatus_userStatus__nlaep\"};","import React, { useEffect, useState } from \"react\"\nimport UserStatusStyle from './UserStatus.module.scss';\n\nconst UserStatus = (props) => {\n    const [isStatusEditing, setIsStatusEditing] = useState(false);\n    const [statusControlValue, setStatusControlValue] = useState(props.status);\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (prevProps.statusControlValue !== this.props.statusControlValue) {\n    //         this.setState({ statusControlValue: this.props.statusControlValue});\n    //     }\n    // }\n\n    useEffect( () => {\n        setStatusControlValue(props.status);\n    }, [props.status])\n\n    const onStatusControlChange = (e) => {\n        setStatusControlValue(e.currentTarget.value)\n    }\n\n    const onStatusControlBlur = () => {\n        props.updateUserStatus(statusControlValue);\n        setIsStatusEditing(false);\n    }\n\n    return (\n        <div>\n            {\n                isStatusEditing ? \n                    <input autoFocus={true} onChange={onStatusControlChange} onBlur={onStatusControlBlur} value={statusControlValue}/> :\n                    <span className={UserStatusStyle.userStatus} onDoubleClick={() => setIsStatusEditing(true)}>{props.status}</span>\n            }\n        </div>\n    )\n}\n\nexport { UserStatus }","import React from 'react';\nimport UserInfoStyles from './UserInfo.module.scss';\nimport AnimeImage from '../../../images/anime.jpg';\nimport { UserStatus } from './UserStatus/UserStatus';\n\nconst UserInfo = (props) => (\n    <div className={UserInfoStyles.userInfoContainer}>\n        <img src={props.userInfo.photos?.large || props.userInfo.photos?.small || AnimeImage } alt='anime'/>\n        <div className={UserInfoStyles.userInfo}>\n            <div>{props.userInfo.fullName}</div>\n            { props.userInfo.aboutMe && <div>{props.userInfo.aboutMe}</div> }\n            <div>\n                { props.userInfo.lookingForAJob ? 'Ищет' : 'Не ищет'} работку { props.userInfo.lookingForAJobDescription && `- ${props.userInfo.lookingForAJobDescription}` }\n            </div>\n\n            <UserStatus status={props.userStatus} updateUserStatus={props.updateUserStatus}/>\n        </div>\n    </div>\n)\n\nexport { UserInfo };","import { Posts } from \"./Posts/Posts\";\nimport { UserInfo } from \"./UserInfo/UserInfo\";\n\nconst Profile = (props) => (\n    <div>\n        <UserInfo userInfo={props.userInfo} userStatus={props.userStatus} updateUserStatus={props.updateUserStatus}/>\n        { Number(props.params?.userId) === props.authData.id && <Posts \n            postsData={props.postsData}\n            newPostControlValue={props.newPostControlValue}\n            updateNewPostControlValue={props.updateNewPostControlValue}\n            createPost={props.createPost}\n        /> }\n    </div>\n)\n\nexport { Profile };","import { connect } from \"react-redux\";\nimport { addNewPostAction, getUserStatusThunk, getUserThunk, updateUserStatusThunk } from \"../../redux/reducers/profileReducer\";\nimport { Profile } from \"./Profile\";\nimport React from \"react\";\nimport { Loader } from \"../common/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { withAuthCheck } from \"../hoc/WithAuthCheck\";\nimport { compose } from \"redux\";\nimport { withSuspense } from \"../hoc/WithSuspense\";\n\nclass ProfileApiComponent extends React.Component {\n\n    componentDidMount() {\n        const userId = this.props.params.userId === 'me' ? this.props.authData.id : this.props.params.userId;\n\n        this.props.getUser(userId);\n        this.props.getUserStatus(userId);\n    }\n\n    render() {\n        return (\n            this.props.isUserInfoFetching ? <Loader /> : <Profile {...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userInfo: state.profilePage.userInfo,\n    userStatus: state.profilePage.userStatus,\n    postsData: state.profilePage.postsData,\n    newPostControlValue: state.profilePage.newPostControlValue,\n    isUserInfoFetching: state.profilePage.isUserInfoFetching,\n    authData: state.auth,\n});\n\nconst mapDispatchToProps ={\n    createPost: addNewPostAction,\n    getUser: getUserThunk,\n    getUserStatus: getUserStatusThunk,\n    updateUserStatus: updateUserStatusThunk,\n};\n\nconst ProfileWithRouteDataComponent = (props) => (<ProfileApiComponent {...props} params={useParams()}/>)\n\nconst ProfileContainer =  compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthCheck,\n    withSuspense,\n)(ProfileWithRouteDataComponent)\n\nexport default ProfileContainer;","import { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst withAuthCheck = (Component) => {\n    const wrapper = (props) => {\n        if (!props.auth.isAuth) {\n            return <Navigate  to=\"/login\"/>;\n        }\n\n        return <Component {...props}/>\n    }\n\n    const mapStateToProps = (state) => ({\n        auth: state.auth\n    });\n    const mapDispatchToProps = {}\n    \n    const checkComponent = connect(mapStateToProps, mapDispatchToProps)(wrapper)\n\n    return checkComponent;\n}\n\nexport { withAuthCheck }\n","import React, { Suspense } from \"react\"\nimport { Loader } from \"../common/Loader/Loader\"\n\nconst withSuspense = (Component) => {\n    const wrapper = (props) => (\n        <Suspense fallback={<Loader />}>\n            <Component {...props} />\n        </Suspense>\n    )\n    \n    return wrapper;\n}\n\nexport { withSuspense }\n"],"names":["Post","props","_jsxs","className","PostStyles","children","_jsx","src","AnimeImage","alt","authorName","message","Posts","postsData","map","postData","id","NewPostFormComponent","reduxForm","form","onSubmit","handleSubmit","Field","name","component","cols","rows","placeholder","PostsStyles","newPostFormValue","createPost","newPostText","UserStatus","isStatusEditing","setIsStatusEditing","useState","statusControlValue","setStatusControlValue","status","useEffect","autoFocus","onChange","e","currentTarget","value","onBlur","onStatusControlBlur","updateUserStatus","UserStatusStyle","onDoubleClick","UserInfo","_props$userInfo$photo","_props$userInfo$photo2","UserInfoStyles","userInfo","photos","large","small","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","concat","userStatus","Profile","_props$params","Number","params","userId","authData","newPostControlValue","updateNewPostControlValue","ProfileApiComponent","React","componentDidMount","this","getUser","getUserStatus","render","isUserInfoFetching","Loader","mapDispatchToProps","addNewPostAction","getUserThunk","getUserStatusThunk","updateUserStatusThunk","compose","connect","state","profilePage","auth","withAuthCheck","withSuspense","useParams","Component","isAuth","Navigate","to","Suspense","fallback"],"sourceRoot":""}